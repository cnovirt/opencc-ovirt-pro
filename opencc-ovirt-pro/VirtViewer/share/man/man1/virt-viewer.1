.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VIRT-VIEWER 1"
.TH VIRT-VIEWER 1 "2020-04-03" "perl v5.30.2" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
virt\-viewer \- display the graphical console for a virtual machine
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBvirt-viewer\fR [\s-1OPTIONS\s0] [ID|UUID|DOMAIN\-NAME]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBvirt-viewer\fR is a minimal tool for displaying the graphical console
of a virtual machine. The console is accessed using the \s-1VNC\s0 or \s-1SPICE\s0
protocol. The guest can be referred to based on its name, \s-1ID,\s0 or
\&\s-1UUID.\s0 If the guest is not already running, then the viewer can be told
to wait until it starts before attempting to connect to the console.
The viewer can connect to remote hosts to lookup the console
information and then also connect to the remote console using the same
network transport.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following options are accepted when running \f(CW\*(C`virt\-viewer\*(C'\fR:
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
Display command line help summary
.IP "\-V, \-\-version" 4
.IX Item "-V, --version"
Display program version number
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
Display information about the connection
.IP "\-c \s-1URI,\s0 \-\-connect=URI" 4
.IX Item "-c URI, --connect=URI"
Specify the hypervisor connection \s-1URI\s0
.IP "\-w, \-\-wait" 4
.IX Item "-w, --wait"
Wait for the domain to start up before attempting to connect to the console
.IP "\-r, \-\-reconnect" 4
.IX Item "-r, --reconnect"
Automatically reconnect to the domain if it shuts down and restarts
.IP "\-z \s-1PCT,\s0 \-\-zoom=PCT" 4
.IX Item "-z PCT, --zoom=PCT"
Zoom level of the display window in percentage. Range 10\-400.
.IP "\-d, \-\-direct" 4
.IX Item "-d, --direct"
Do not attempt to tunnel the console over \s-1SSH,\s0 even if the main connection \s-1URI\s0
used \s-1SSH.\s0
.IP "\-a, \-\-attach" 4
.IX Item "-a, --attach"
Instead of making a direct \s-1TCP/UNIX\s0 socket connection to the remote display,
ask libvirt to provide a pre-connected socket for the display. This avoids
the need to authenticate with the remote display server directly. This option
will only work when connecting to a guest that is running on the same host
as the virt-viewer program. If attaching to the guest via libvirt fails,
virt-viewer will automatically fallback to trying a regular direct \s-1TCP/UNIX\s0
socket connection.
.IP "\-f, \-\-full\-screen" 4
.IX Item "-f, --full-screen"
Start with the window maximised to fullscreen
.Sp
If supported, the remote display will be reconfigured to match the physical
client monitor configuration, by enabling or disabling extra monitors as
necessary. This is currently implemented by the Spice backend only.
.Sp
To specify which client monitors are used in fullscreen mode, see the
\&\s-1CONFIGURATION\s0 section below.
.IP "\-\-debug" 4
.IX Item "--debug"
Print debugging information
.IP "\-H \s-1HOTKEYS,\s0 \-\-hotkeys \s-1HOTKEYS\s0" 4
.IX Item "-H HOTKEYS, --hotkeys HOTKEYS"
Set global hotkey bindings. By default, keyboard shortcuts only work when the
guest display widget does not have focus.  Any actions specified in \fB\s-1HOTKEYS\s0\fR
will be effective even when the guest display widget has input focus. The format
for \fB\s-1HOTKEYS\s0\fR is <action1>=<key1>[+<key2>][,<action2>=<key3>[+<key4>]].
Key-names are case-insensitive. Valid actions are: toggle-fullscreen,
release-cursor, secure-attention, smartcard-insert and smartcard-remove.  The
\&\f(CW\*(C`secure\-attention\*(C'\fR action sends a secure attention sequence (Ctrl+Alt+Del) to
the guest. Examples:
.Sp
.Vb 1
\&  \-\-hotkeys=toggle\-fullscreen=shift+f11,release\-cursor=shift+f12
\&
\&  \-\-hotkeys=release\-cursor=ctrl+alt
.Ve
.Sp
Note that hotkeys for which no binding is given are disabled. Although the
hotkeys specified here are handled by the client, it is still possible to send
these key combinations to the guest via a menu item.
.IP "\-k, \-\-kiosk" 4
.IX Item "-k, --kiosk"
Start in kiosk mode. In this mode, the application will start in
fullscreen with minimal \s-1UI.\s0 It will prevent the user from quitting or
performing any interaction outside of usage of the remote desktop
session.
.Sp
Note that it can't offer a complete secure solution by itself. Your
kiosk system must have additional configuration and security settings
to lock down the \s-1OS.\s0 In particular, you must configure or disable the
window manager, limit the session capabilities, use some
restart/watchdog mechanism, disable \s-1VT\s0 switching etc.
.IP "\-\-kiosk\-quit <never|on\-disconnect>" 4
.IX Item "--kiosk-quit <never|on-disconnect>"
By default, when kiosk mode is enabled, virt-viewer will remain open
when the connection to the remote server is terminated. By setting
kiosk-quit option to \*(L"on-disconnect\*(R" value, virt-viewer will quit
instead. Please note that \-\-reconnect takes precedence over this
option, and will attempt to do a reconnection before it quits.
.IP "\-\-id, \-\-uuid, \-\-domain\-name" 4
.IX Item "--id, --uuid, --domain-name"
Connect to the virtual machine by its id, uuid or name. These options
are mutual exclusive. For example the following command may sometimes
connect to a virtual machine with the id 2 or with the name 2 (depending
on the number of running machines):
.Sp
.Vb 1
\&    virt\-viewer 2
.Ve
.Sp
To always connect to the virtual machine with the name \*(L"2\*(R" use the
\&\*(L"\-\-domain\-name\*(R" option:
.Sp
.Vb 1
\&    virt\-viewer \-\-domain\-name 2
.Ve
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
A small number of configuration options can be controlled by editing the
settings file located in the user configuration directory:
.PP
.Vb 1
\&    <USER\-CONFIG\-DIR>/virt\-viewer/settings
.Ve
.PP
This file is a text file in \s-1INI\s0 format, with application options in the
[virt\-viewer] group and per-guest options in a group identified by the guest's
\&\s-1UUID.\s0 The application options should not be edited manually. There is also a
special [fallback] group which specifies options for all guests that don't have
an explicit group.
.PP
For each guest, the initial fullscreen monitor configuration can be specified
by using the \fBmonitor-mapping\fR key. This configuration only takes effect when
the \-f/\-\-full\-screen option is specified.
.PP
The value of this key is a list of mappings between a guest display and a
client monitor. Each mapping is separated by a semicolon character, and the
mappings have the format <\s-1GUEST\-DISPLAY\-ID\s0>:<\s-1CLIENT\-MONITOR\-ID\s0>.
.PP
For example, to map guest displays 1 and 2 to client monitors 2 and 3 for the
guest with a \s-1UUID\s0 of e4591275\-d9d3\-4a44\-a18b\-ef2fbc8ac3e2, use:
.PP
.Vb 2
\&    [e4591275\-d9d3\-4a44\-a18b\-ef2fbc8ac3e2]
\&    monitor\-mapping=1:2;2:3
.Ve
.PP
The monitor-mapping must contain ids of all displays from 1 to the last
desired display id, e.g. \*(L"monitor\-mapping=3:3\*(R" is invalid because mappings
for displays 1 and 2 are not specified.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To connect to the guest called 'demo' running under Xen
.PP
.Vb 1
\&   virt\-viewer demo
.Ve
.PP
To use \s-1GUI\s0 for connecting to a guest running under \s-1QEMU\s0
.PP
.Vb 1
\&   virt\-viewer \-\-connect qemu:///system
.Ve
.PP
To connect to the guest with \s-1ID 7\s0 running under \s-1QEMU\s0
.PP
.Vb 1
\&   virt\-viewer \-\-connect qemu:///system 7
.Ve
.PP
To wait for the guest with \s-1UUID\s0 66ab33c0\-6919\-a3f7\-e659\-16c82d248521 to
startup and then connect, also reconnecting upon restart of \s-1VM\s0
.PP
.Vb 1
\&   virt\-viewer \-\-reconnect \-\-wait 66ab33c0\-6919\-a3f7\-e659\-16c82d248521
.Ve
.PP
To connect to a remote console using \s-1TLS\s0
.PP
.Vb 1
\&   virt\-viewer \-\-connect xen://example.org/ demo
.Ve
.PP
To connect to a remote host using \s-1SSH,\s0 lookup the guest config and
then make a tunnelled connection of the console
.PP
.Vb 1
\&   virt\-viewer \-\-connect qemu+ssh://root@example.org/system demo
.Ve
.PP
When using a \s-1SSH\s0 tunnel to connect to a \s-1SPICE\s0 console, it's recommended to
have ssh-agent running to avoid getting multiple authentication prompts.
.PP
To connect to a remote host using \s-1SSH,\s0 lookup the guest config and
then make a direct non-tunnelled connection of the console
.PP
.Vb 1
\&   virt\-viewer \-\-direct \-\-connect xen+ssh://root@example.org/ demo
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Daniel P. Berrange, based on the GTK-VNC example program gvncviewer.
.SH "BUGS"
.IX Header "BUGS"
Report bugs to https://gitlab.com/virt\-viewer/virt\-viewer/\-/issues
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2007\-2020 Red Hat, Inc., and various contributors.
This is free software. You may redistribute copies of it under the terms of the \s-1GNU\s0 General
Public License \f(CW\*(C`https://www.gnu.org/licenses/gpl\-2.0.html\*(C'\fR. There is \s-1NO WARRANTY,\s0
to the extent permitted by law.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CWvirsh(1)\fR, \f(CW\*(C`virt\-manager(1)\*(C'\fR, \f(CW\*(C`spice\-client(1)\*(C'\fR, the project website \f(CW\*(C`http://gitlab.com/virt\-viewer/virt\-viewer\*(C'\fR
